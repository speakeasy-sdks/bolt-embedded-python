"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .merchant_logo import MerchantLogo
from .merchant_platform import MerchantPlatform
from .webhooks_type import WebhooksType
from bolt_embedded_api import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MerchantDivision:
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""The description of the merchant division. **Nullable** for Transactions Details."""
    is_universal_merchant_api: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_universal_merchant_api') }})
    r"""Defines whether or not the Universal API method is in use. **Nullable** for Transactions Details."""
    is_webhooks_v2: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_webhooks_v2') }})
    r"""Defines whether or not the second version of Bolt's webhooks is in use. **Nullable** for Transactions Details."""
    merchant_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchant_id') }})
    r"""The unique ID for the merchant's Bolt account. A merchant account contains many merchant divisions. **Nullable** for Transactions Details."""
    shipping_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipping_url') }})
    r"""The endpoint URL provided by the merchant to Bolt for shipping calculations. **Nullable** for Transactions Details."""
    tax_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tax_url') }})
    r"""The endpoint URL provided by the merchant to Bolt for tax calculations. **Nullable** for Transactions Details."""
    account_page_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_page_url'), 'exclude': lambda f: f is None }})
    r"""The URL provided by the merchant for the account page."""
    api_base_domain_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_base_domain_url'), 'exclude': lambda f: f is None }})
    create_order_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('create_order_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant to Bolt for creating orders. **Nullable** for Transactions Details."""
    debug_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('debug_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant for debugging."""
    get_account_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('get_account_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant to fetch accounts."""
    hook_type: Optional[WebhooksType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hook_type'), 'exclude': lambda f: f is None }})
    r"""[Webhook events](https://help.bolt.com/developers/guides/webhooks/#transaction-hook-types) that trigger a notification to the URL.  **Note**:`newsletter_subscription` is only for merchant use cases."""
    hook_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hook_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant to send webhooks."""
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique ID associated to the merchant's Bolt Account division; Merchants can have different divisions to suit multiple use cases (storefronts, pay-by-link, phone order processing). You can view and switch between these divisions from the Bolt Merchant Dashboard."""
    logo: Optional[MerchantLogo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logo'), 'exclude': lambda f: f is None }})
    oauth_logout_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth_logout_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant for logging out of OAuth accounts."""
    oauth_redirect_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth_redirect_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant for OAuth redirects."""
    platform: Optional[MerchantPlatform] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('platform'), 'exclude': lambda f: f is None }})
    r"""The type of platform being used for this merchant division."""
    plugin_config_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plugin_config_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant for checking plugin configuration details."""
    privacy_policy_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privacy_policy_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant for providing a unique privacy policy."""
    product_info_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('product_info_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant for checking product details."""
    public_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('public_id'), 'exclude': lambda f: f is None }})
    r"""The unique public ID for one of the merchant's store division."""
    shipping_and_tax_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipping_and_tax_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant to Bolt for shipping and tax calculations."""
    terms_of_service_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('terms_of_service_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant for providing unique terms of service."""
    universal_merchant_api_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('universal_merchant_api_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant to access their universal API."""
    update_cart_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('update_cart_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant to Bolt to pass cart updates."""
    validate_additional_account_data_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validate_additional_account_data_url'), 'exclude': lambda f: f is None }})
    r"""The endpoint URL provided by the merchant for validating additional account data."""
    

