"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .i_custom_field_view import ICustomFieldView
from .i_gift_option_view import IGiftOptionView
from bolt_embedded_api import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import List, Optional

class TransactionProcessorType(str, Enum):
    AFFIRM = 'affirm'
    AFTERPAY = 'afterpay'
    AMAZON_PAY = 'amazon_pay'
    CREDOVA = 'credova'
    KLARNA = 'klarna'
    PAYPAL = 'paypal'
    SEZZLE = 'sezzle'
    RADIAL_KLARNA = 'radial_klarna'
    RADIAL_PAYPAL = 'radial_paypal'
    ADYEN_GATEWAY = 'adyen_gateway'
    ALLIANCE_DATA = 'alliance_data'
    AUTHORIZE_NET = 'authorize_net'
    BRAINTREE = 'braintree'
    CARDCONNECT = 'cardconnect'
    CHECKOUT_COM = 'checkout_com'
    CYBERSOURCE = 'cybersource'
    FIRST_DATA = 'first_data'
    NMI = 'nmi'
    ORBITAL = 'orbital'
    PAYPAL_PAYFLOW = 'paypal_payflow'
    RADIAL = 'radial'
    ROCKETGATE = 'rocketgate'
    SHOPIFY_PAYMENTS = 'shopify_payments'
    STRIPE = 'stripe'
    MAGENTOPAYMENT = 'magentopayment'
    ADYEN_PAYFAC = 'adyen_payfac'
    VANTIV = 'vantiv'
    GOOGLE_PAY = 'google_pay'
    BOLT = 'bolt'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EligiblePaymentMethods:
    eligible: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eligible'), 'exclude': lambda f: f is None }})
    transaction_processor_type: Optional[TransactionProcessorType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transaction_processor_type'), 'exclude': lambda f: f is None }})
    


class HideApm(str, Enum):
    PAYPAL = 'PAYPAL'
    AFFIRM = 'AFFIRM'
    AFTERPAY = 'AFTERPAY'
    AMAZONPAY = 'AMAZONPAY'
    KLARNA = 'KLARNA'
    RADIALPAYPAL = 'RADIALPAYPAL'
    SEZZLE = 'SEZZLE'
    RADIALKLARNA = 'RADIALKLARNA'
    CREDOVA = 'CREDOVA'
    GOOGLEPAY = 'GOOGLEPAY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IOrderDynamicContent:
    custom_fields: Optional[List[ICustomFieldView]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom_fields'), 'exclude': lambda f: f is None }})
    eligible_payment_methods: Optional[List[EligiblePaymentMethods]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eligible_payment_methods'), 'exclude': lambda f: f is None }})
    gift_option_view: Optional[IGiftOptionView] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gift_option_view'), 'exclude': lambda f: f is None }})
    hide_apm: Optional[List[HideApm]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hide_apm'), 'exclude': lambda f: f is None }})
    order_notice: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('order_notice'), 'exclude': lambda f: f is None }})
    payment_notice: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payment_notice'), 'exclude': lambda f: f is None }})
    shipping_info_notice: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipping_info_notice'), 'exclude': lambda f: f is None }})
    shipping_notice: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipping_notice'), 'exclude': lambda f: f is None }})
    

