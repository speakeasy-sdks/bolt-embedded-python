"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .amount_view import AmountView
from .capture_status import CaptureStatus
from bolt_embedded_api import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Dict, List, Optional

class CaptureType(str, Enum):
    r"""Fee type options. **Nullable** for Transactions Details."""
    NET = 'net'
    PROCESSING_FEE = 'processing_fee'
    RISK_FEE = 'risk_fee'
    APM_FEE = 'apm_fee'
    NETWORK_FEE = 'network_fee'
    PLATFORM_FEE = 'platform_fee'
    BOLT_ACCOUNT_FEE = 'bolt_account_fee'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Splits:
    r"""A split of fees by type and amount."""
    amount: Optional[AmountView] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    type: Optional[CaptureType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Fee type options. **Nullable** for Transactions Details."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Capture:
    r"""Deprecated. Use `captures`."""
    amount: Optional[AmountView] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique ID for the capture. **Nullable** for Transactions Details."""
    merchant_event_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchant_event_id'), 'exclude': lambda f: f is None }})
    r"""The reference ID associated with a transaction event (auth, capture, refund, void). This is an arbitrary identifier created by the merchant. Bolt does not enforce any uniqueness constraints on this ID. It is up to the merchant to generate identifiers that properly fulfill its needs."""
    metadata: Optional[Dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Additional information about the capture. For example, the processor capture ID. **Nullable** for Transactions Details."""
    splits: Optional[List[Splits]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('splits'), 'exclude': lambda f: f is None }})
    r"""A split of fees by type and amount. **Nullable** for Transactions Details."""
    status: Optional[CaptureStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status of the capture. **Nullable** for Transactions Details."""
    

