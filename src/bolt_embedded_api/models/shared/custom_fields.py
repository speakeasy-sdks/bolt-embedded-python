"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from bolt_embedded_api import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Optional

class CheckoutSetup(str, Enum):
    SHIPPING_STEP = 'shipping_step'
    DELIVERY_STEP = 'delivery_step'
    PAYMENT_STEP = 'payment_step'
    ACCOUNT_REGISTRATION_SSO = 'account_registration_sso'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomFields:
    checkout_setup: Optional[CheckoutSetup] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('checkout_setup'), 'exclude': lambda f: f is None }})
    dynamic: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dynamic'), 'exclude': lambda f: f is None }})
    r"""Defines whether the field is dynamic."""
    external_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('external_id'), 'exclude': lambda f: f is None }})
    r"""The external ID for the custom field."""
    field_setup: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field_setup'), 'exclude': lambda f: f is None }})
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})
    r"""The displayed label for the custom field, seen by the shopper."""
    position: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})
    public_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('public_id'), 'exclude': lambda f: f is None }})
    r"""The internal ID for the custom field."""
    required: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('required'), 'exclude': lambda f: f is None }})
    r"""Defines if the field must be completed to check out."""
    subscribe_to_newsletter: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscribe_to_newsletter'), 'exclude': lambda f: f is None }})
    r"""Defines whether the shopper is opted into a newsletter or not."""
    

