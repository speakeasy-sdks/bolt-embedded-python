"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from typing import Final, Optional



@dataclasses.dataclass
class OAuthTokenInputRefresh:
    client_id: str = dataclasses.field(metadata={'form': { 'field_name': 'client_id' }})
    r"""Merchant publishable key which can be found in the merchant dashboard"""
    client_secret: str = dataclasses.field(metadata={'form': { 'field_name': 'client_secret' }})
    r"""Your Bolt API Key."""
    refresh_token: str = dataclasses.field(metadata={'form': { 'field_name': 'refresh_token' }})
    r"""The value of the refresh token issued to you in the originating OAuth token request."""
    scope: str = dataclasses.field(metadata={'form': { 'field_name': 'scope' }})
    r"""The scope issued to the merchant when receiving an authorization code. Options include `bolt.account.manage`, `bolt.account.view`, `openid`."""
    GRANT_TYPE: Final[str] = dataclasses.field(default='refresh_token', metadata={'form': { 'field_name': 'grant_type' }})
    r"""The type of OAuth 2.0 grant being utilized.

    The value will always be `refresh_token` when exchanging a refresh token for an access token.
    """
    state: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'state' }})
    r"""A randomly generated string issued to the merchant when receiving an authorization code used to prevent CSRF attacks"""
    

